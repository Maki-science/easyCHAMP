[{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://maki-science.github.io/easyCHAMP/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"easyCHAMP","text":"corresponding paper published, able download package CRAN (watch badge top page). Just go upper tool bar RStudio click tools > Install Packages… > tipe easyCHAMP > click install, run: can also install development version easyCHAMP GitHub. already installed, need Rtools installed system able compile development version (https://cran.r-project.org/bin/windows/Rtools/). (devtools installed ) installed, don’t need repeat step time! want update newest version, just run second line .","code":"install.packages(\"easyCHAMP\") install.packages(\"devtools\") # just necessary if not already installed devtools::install_github(\"Maki-science/easyCHAMP\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"naming-workflow","dir":"Articles","previous_headings":"","what":"Naming & workflow","title":"easyCHAMP","text":"(pre-)Purency workflow usually produces several filters (measurements) sample. scanned via µ-FTIR resulting data analysed Microplastic Finder Purency. software produces *.csv files sample containg particles annotation, usually cured refined human. , files sample corrected blank results summarized. jump : highly recommend adopt common file-naming procedure. function uses everything .csv file names first ’_’ (underline) sample name. rest considered filter/measurement (e.g., SAMPLENAME_Filter1of3). also allows one blank multiple filters/samples one location (.e., replicates), naming samples accordingly. examples apply naming different blank application:  can also use mix versions, necessary, though, think might bad sampling design. don’t blanks process, can skip blank processing setting noBlank = TRUE. Warning: names always uniquely identifyable. instance, blank called ‘TESTBlank_filterx’, samples called ‘TEST_filtery’ ‘somethingelseTEST_filterz’ match ‘TEST’ samples, even though thought separately blank-corrected. Therefore, ‘test’ clearly identifyable second sample include test, blank must renamed precisely. WARNING: naming files important prerequisite proper processing. Thus need cautiously set file names! Put files want process including blank files one folder. recommend put files certain project/study similar one folder process .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"processing-possibilities","dir":"Articles","previous_headings":"","what":"Processing possibilities","title":"easyCHAMP","text":"use package function, just load package usual:","code":"library(easyCHAMP)"},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"processing-a-summary-with-blank-correction","dir":"Articles","previous_headings":"Processing possibilities","what":"Processing a summary with blank correction","title":"easyCHAMP","text":"Now simply run follwing line, change path accordingly location stored files processed. Make sure use (change) / \\, since windows uses backslashes. Note: / end required! Copy paste line console press ‘enter’. WARNING: runs function default configuration. might need adopt parameters. See details. WARNING: Make sure .csv file correct column separator (; default) decimal sign (, default). Otherwise read change function, make sure save .csv file properly. function warn missing values files. respective files columns reported. finished processing message done.","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\") # or similar"},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"output-of-easychamp","dir":"Articles","previous_headings":"Processing possibilities > Processing a summary with blank correction","what":"Output of easyCHAMP()","title":"easyCHAMP","text":"usually need just seconds process e.g. 100 files, course depending particle number. excel file sample created selected folder sample results summarized. files one additional file processing data. can find data sets processing step separate sheets (also raw data), can trace back calculation /load parts data R required without running whole function . compatibility Excel files old version. Therefore, might occur message potential broken file confirm. However, warning can ignored. Note excel file coded ‘.’ decimal sign!","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"perform-particle-wise-processing","dir":"Articles","previous_headings":"Processing possibilities","what":"Perform particle wise processing","title":"easyCHAMP","text":"cases might necessary perform processing blank correction particle list, retaining information single particle (compared size-class summary ). aim , keep particle list, still allow correction blank particles. Therefore, created second function easyCHAMP.particles(). mainly uses area particle size reference. case several blanks per sample, similar particles across blank replicates averaged, blank correction performed searching similar particles within certain range substract particle list. preserves particle traits, e.g., simulation purposes, still allowing rather conservative blank correction. Details described .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"how-to-use-easychamp-particles","dir":"Articles","previous_headings":"Processing possibilities > Perform particle wise processing","what":"How to use easyCHAMP.particles()","title":"easyCHAMP","text":", simply load library command package installed: Make sure files named according requirements blank processing. rules apply easyCHAMP() (see ). requirements fulfilled, function can run just path files processed function: functionality, parameters can also applied function. However, case sizeclasses, function uses squared value size class categorization. seemed intuitive use simple edge lengths categorization, since size class area 22,500 (edge length 150 µm) rather abstract. , area fibres recalculated according manually measured actual length fibres. Purencys’ Microplastic Finder calculate length fibres correctly, since just takes distance edge edge. Changing angles considered, proper length measured manually. probably suitable approximation real area fibre, function multiplies width actual (manually measured) length. recalculated area can found output file.","code":"library(easyCHAMP) easyCHAMP.particles(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\") # or similar"},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"output-of-easychamp-particles","dir":"Articles","previous_headings":"Processing possibilities > Perform particle wise processing","what":"Output of easyCHAMP.particles()","title":"easyCHAMP","text":"function creates one .xls file, processing_data.csv. , can find several sheets processed sample particles, processed blanks, removed sample blank particles, raw sample blank data. data reflect step processing. sheets removed particles include column stated, particle processed (particle gets index track action function). Note excel file coded ‘.’ decimal sign, !","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/easyCHAMP.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"easyCHAMP","text":"lot possibilities customize function, processing output. Check options upper toolbar consideration. WARNING: options obligatory checked! Otherwise, results might reliable! covers especially key words column numbers contain required information install files named polymer-shape-size wise summary particle-wise processing (mainly blank correction) Labpresets specifications function call according *.csv files Changing file specifications (e.g., decimal sign) Use different naming styles Change evaluated polymers (substances) Change sizeclasses interested particle shape? parts samples analysed? easyCHAMP.particles() : certain particle colour analysed separately (e.g., using spiked standard particles)! easyCHAMP.particles() : particles shape, don’t want set manually (ignore )! Get results R environment use (e.g., creating graphs) get column sums file get extra file total particle numbers sample Troubleshooting: list common issues mistakes","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/file-custom.html","id":"changing-separator-and-decimal-sign-in--csv-files","dir":"Articles","previous_headings":"","what":"Changing separator and decimal sign in .csv-files","title":"Customize file specifications","text":"Depending habits country /system configuration, csv files might different. default, function uses ‘;’ separator, indicating new column csv file, ‘,’ decimal sign. Change liking adding sep = \";\" dec = \",\" change sign within quotes.","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",             sep = \";\",             dec = \",\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/file-custom.html","id":"dont-use-the-recommended-file-naming","dir":"Articles","previous_headings":"","what":"Don’t use the recommended file naming","title":"Customize file specifications","text":"choose call blank files recommended (MYSAMPLENAMEBlank - capital B) change accordingly. chose use case sensitivity prevent accidental choice wrong files blanks. example noncapital b (.e., MYSAMPLENAMEblank): NOTE: Feel free adapt naming liking long division _ (underline), positioning blank sample name provided. Otherwise may get unforeseeable results! examples apply naming different blank application: sample one blank filters. can still several filters sample /blank, summed together processing: Samples: SAMPLENAME1_Filter1, SAMPLENAME2_Filter1 Blanks: SAMPLENAME1Blank_Filter1, SAMPLENAME2Blank_filter1 Samples use blank(s): Samples: SAMPLENAME1_Filter1, SAMPLENAME2_Filter1 Blank: SAMPLENAMEBlank_Filter1 (notice missing number) several blanks, averaged combined blank samples (still, blank can constitute several filters summed averaging blanks): Samples: SAMPLENAME1_Filter1, SAMPLENAME2_Filter1 Blanks: SAMPLENAME1Blank1_Filter1, SAMPLENAME1Blank2_filter1, SAMPLENAME2Blank1_Filter1, SAMPLENAME2Blank2_filter1 (note number (sign) behind ‘Blank’ ’_’) want use one (several averaged) blanks samples: Samples: PREFIXSAMPLENAME1_Filter1, PREFIXSAMPLENAME2_Filter1 (set prefix) Blanks: PREFIXBlank_Filter1, PREFIXBLank_filter1 (use prefix directly state ‘Blank_’) can also use mix versions, necessary, though, think might bad sampling design. don’t blanks process, can skip blank processing setting noBlank = TRUE. WARNING: naming files important prerequisite proper processing. Thus need cautiously set file names!","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",             blankKey = \"blank\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"change-evaluated-polymers","dir":"Articles","previous_headings":"","what":"Change evaluated polymers","title":"Customize function options","text":"current state, function evaluates 22 polymers (see example). like add polymers, just evaluate , can overwrite default setting simply change content c(...) accordingly (make sure, content ending , like (... ,). Just delete add (un)desired polymers. WARNING: named polymers differently Purency software, set accordingly .","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",              polymers = c(\"PU\", \"EVAc\", \"PA\", \"PAN\", \"PBT\", \"PET\", \"PE\", \"PMMA\", \"PP\",                           \"POM\", \"PS\", \"PVC\", \"PC\", \"ABS\", \"PPSU\", \"CA\", \"PEEK\", \"EVOH\",                           \"PSU\", \"SILICONE\", \"PLA\", \"PLAPBAT\"))"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"change-evaluated-size-classes","dir":"Articles","previous_headings":"","what":"Change evaluated size classes","title":"Customize function options","text":"size classes evaluated function can set manually. function dynamically switch desired size classes. sum numbers 0 first number (e.g., <=10. always exclude lower number include upper number (e.g., >10 <= 20, >20 <= 50, …). Finally, highest number infinite (e.g., >500).","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",              sizeclasses = c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500))"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"not-interested-in-shape","dir":"Articles","previous_headings":"","what":"Not interested in shape?","title":"Customize function options","text":"interested shape particles summaries performed without considering particle shapes, parameter colShape can set none:","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",              colShape = \"none\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"you-analysed-only-parts-of-a-sample---integrate-division-factors","dir":"Articles","previous_headings":"","what":"You analysed only parts of a sample? - integrate division factors","title":"Customize function options","text":"many cases can happen, part sample measured, many particles. might different sample blanks (e.g., might filter breaks appart). Therefore, can provide division factor sample blank separately, even filter separately. However, keep simple prevent mistakes, set setDivFactor calling function. three options available: setDivFactor = FALSE ignore parameter (default). setDivFactor = \"samplewise\", cause function request required values processing sample (.e., filters one sample factor). set setDivFactor = \"filterwise\", division factor requested filter separately. Just watch R console follow instructions. use quarter sample factor provide 0.25. divide sample 1. implemented two ways, reduce effort possibility mistakes typing factors, similar filters sample, still provide opportunity choose factors filter, case issues sample preparation, causing different factors filter. WARNING: Make sure exactly follow instructions. Keep order similar provided order samples/blanks. WARNING: use several blanks summed samples (like example 3 beginning) can chose common division factor. NOTE: option available easyCHAMP.particles(), since reasonable multiply particles similar properties particle-wise processing.","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",              setDivFactor = \"samplewise\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"one-colour-of-your-particles-should-be-separated-from-the-rest-easychamp-particles-only","dir":"Articles","previous_headings":"","what":"One colour of your particles should be separated from the rest? (easyCHAMP.particles() only)","title":"Customize function options","text":"labwork can happen, one likes separate certain colour particles others evaluation. usecase investigation plastic particles agricultural fields. , black mulching films used cover ground. However, ’re interested plastic originate mulching film, want able distinguish , consider colour particles. However, practice, interest particle-wise evaluation. Therefore, implemented another parameter colourSep function easyCHAMP.particles(). can provide colour stated data, separately evaluated: receive blank-corrected particles chosen colour colours separately. NOTE: option available easyCHAMP, since colours considered summary function (doesn’t make sense create even groups anyway)!","code":"easyCHAMP.particles(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",                        colourSep = \"black\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/option-custom.html","id":"automatically-fill-missing-values-with-provided-default","dir":"Articles","previous_headings":"","what":"Automatically fill missing values with provided default","title":"Customize function options","text":"filters hundreds particles can exhausting set every shape colour Purency software manually, especially . Therefore, can provide default values parameters formFillDefault colourFillDefault . plastic particle list NA respective field, set default, provided. done excel, course, , can just --flow files . function thow Note console inform automatic change, case want trace back reason.","code":"easyCHAMP.particles(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",                        formFillDefault = \"fragment\",                       colourFillDefault = \"black\")"},{"path":"https://maki-science.github.io/easyCHAMP/articles/other-lab.html","id":"use-this-package-in-another-lab","dir":"Articles","previous_headings":"","what":"Use this package in another lab","title":"Change settings to other labs' preferences","text":"output easyCHAMP can customized certain extend different labs may different requirements conventions name things (also language done). Therefore, default settings function apply animal ecology group University Bayreuth. Unfortunately, smart way workaround. Thus, function requires several parameters preset working environment lab. make generic convenient labs working package, can overwrite default settings liking. case prefer complete preset lab, don’t provide parameter separately, can implement preset desire. Please feel free open issue order request preset become included package. preset can added quite fast. preset can loaded function call adding parameter labpreset = \"MYOWNLABNAME\":","code":"easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\", labpreset = \"siMPle\") # for example"},{"path":[]},{"path":"https://maki-science.github.io/easyCHAMP/articles/other-lab.html","id":"how-to-specify-the-function-call-for-specific--csv-files","dir":"Articles","previous_headings":"","what":"How to specify the function call for specific *.csv files?","title":"Change settings to other labs' preferences","text":"preset available lab, far, consider following parameters adjusted (just add necessary parameters additional parameter function call): colPol = 6, Column number polymer type stated. TOEKI lab column 6 (Class Name). also provided column name, ASCII encoding (e.g., special character . ä = d). colL = 17, Column number particle length. TOEKI lab column 17 (Length [5µ]). also provided column name, ASCII encoding (e.g., special character . ä = d). colReqPol = 24, Column number particle check, whether particle polymer . TOEKI lab column 24 (Plastik? Plastik ja/nein). also provided column name, ASCII encoding (e.g., special character . ä = d). curing took place, parameter set ‘none’ cause function simply use particles file. Warning: might cause warnings errors occur, polymer unknown substance (e.g., polymer). ReqPolKey = \"ja\", key words indicates whether plastic particle ‘colReqPol’. colShape = 25, Column number particle shape. TOEKI lab column 25 (Form). also provided column name, ASCII encoding (e.g., special character = . ä = d). Can also set ‘none’ column shape exists files. cause function create one set ‘fragment’ shape. However, can ignored afterwards. colCol = 26, Column number particle color TOEKI lab column 26 (Farbe). also provided column name, ASCII encoding (e.g., special character . ä = d). colLFib = 27, Column number particle length case fibre corrected length (curvy shape). TOEKI lab column 27 (Länge). also provided column name, ASCII encoding (e.g., special character . ä = d). fibre = \"Faser\", fibres called colShape (Form). TOEKI lab ‘Faser’. sphere = \"Kugel\", spheres called colShape (Form). TOEKI lab ‘Kugel’. fragment = \"Fragment\", fragments called colShape (Form). TOEKI lab ‘Fragment’. pixel = \"Pixel\", pixels called colShape (Form). TOEKI lab ‘Pixel’. used column numbers workaround issues special characters languages R might problems . Numbers provide unambiguous delimiter. However, use column names instead numbers, long ASCII encoded ASCII conform. Nonetheless, recommend , rather use column numbers. adopted preset, can now run function mentioned (just add preset always function).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/articles/output-custom.html","id":"keep-the-data-in-r-as-data-frame","dir":"Articles","previous_headings":"","what":"Keep the data in R as data frame","title":"Customize the output","text":"want proceed analyse data R, can set dataReturn = TRUE. function return data frame consisting measurements samples selected folder well blanks raw data. can now proceed data analyses plotting usual.","code":"results <- easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",                        dataReturn = TRUE) # only use the fully processed data of all samples: allSamples <- results$sampleSummary"},{"path":"https://maki-science.github.io/easyCHAMP/articles/output-custom.html","id":"summary-of-each-column-at-the-bottom","dir":"Articles","previous_headings":"","what":"Summary of each column at the bottom","title":"Customize the output","text":"function adds bottom line summary data, desired. , column summed custom purpose (e.g., quality control function preliminary steps). However, don’t like line data set, e.g., want process data , can skipt calculation adding eocsum = FALSE function call. NOTE: option available easyCHAMP.particles().","code":"mydata <- easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",                        eocsum = FALSE)"},{"path":"https://maki-science.github.io/easyCHAMP/articles/output-custom.html","id":"get-total-particle-numbers","dir":"Articles","previous_headings":"","what":"Get total particle numbers","title":"Customize the output","text":"like get plastic non-plastic particle numbers, add particleNumbers = TRUE function call get extra *.xls file numbers.","code":"mydata <- easyCHAMP(path=\"C:/users/MYNAME/Desktop/MYFILESTOBEPROCESSED/\",                        particleNumbers = TRUE)"},{"path":"https://maki-science.github.io/easyCHAMP/articles/troubleshooting.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting:","title":"Troubleshooting","text":"function written December 2023. ’ve used current column numbers set Purencys’ software address required information. changed chance Purency (lab members), adopted function well (see article Change settings labs’ preferences read ). , results , course, reliable ! source code can accessed via Github. ’ve commented quite sophisticated, changes quite easy ’re bit programming. Otherwise open issue send request, best implement desired features. issues may arise, already faced (hands), applying functions: error occurs get different results, time function runs, make sure files respective folder processed. re-run function, previously created files , need delete first, run function . ’s just files, created previous run, error. However, results probably wrong! , always check just files interest respective folder! Make sure considered points mentioned articles (see tool bar top), WARNING NOTE provided. convenience, also gathered . NOTE: following case now automated since version 1.3.7.9021. startrow automatically selected file separately, now. However, following error occurs, can disable automation setting defined number startrow described : error Error read.table(file = file, header = header, sep = sep, quote = quote,  : columns column names occurs, likely caused excess line header *.csv file. unkown reason, Purency creates file contains additional line meta-data header (first 40 41 lines, respektively). Usually, real data set starts line 41 (column header). However, case, data start line 42. solution simple: just delete one first 41 lines respective file (watch respect correct decimal sign) run function . Now run smooth, long file issue. files contain less lines, whatsoever, can also set startrow = x, x number lines, ignored (.e., next line data header start). function read data correctly, files structure! something work, may missed one Warnings stated respective option. gathered points : Feel free adapt naming files liking long division _ (underline), positioning blank sample name provided. Otherwise may get unforeseeable results! naming files important prerequisite proper processing. Thus need cautiously set file names! named polymers differently Purency software, set accordingly parameter polymers. using setDivFactor, make sure exactly follow instructions console. Keep order similar provided order samples/blanks. use several blanks summed samples can chose common division factor. Otherwise estimations unevenly distributed filters, recommended. setDivFactor available easyCHAMP.particles(), since reasonable multiply particles similar properties particle-wise processing. colourSepis available easyCHAMP(), since colours considered summary function (doesn’t make sense create even groups anyway)! eocsum available easyCHAMP.particles(). labpreset available implementation desired setup. Please contact us via Report bug button right side page. implementation can done fast get started soon.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marvin Kiene. Author, maintainer. Eva Cseperke Vizsolyi. Author. Benedikt Hufnagl. Author. Martin Löder. Author. Christian Laforsch. Author.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kiene M, Vizsolyi Cseperke E, Hufnagl B, Löder M, Laforsch C (2025). “easyCHAMP: automated Comparable Harmonized Analyses Micro-Particles.” R package version 1.3.8.9021, https://github.com/Maki-science/easyCHAMP.","code":"@Misc{,   title = {easyCHAMP: An automated Comparable and Harmonized Analyses of Micro-Particles},   author = {Marvin Kiene and Eva {Vizsolyi Cseperke} and Benedikt Hufnagl and Martin Löder and Christian Laforsch},   note = {R package version 1.3.8.9021},   year = {2025},   url = {https://github.com/Maki-science/easyCHAMP}, }"},{"path":"https://maki-science.github.io/easyCHAMP/index.html","id":"easychamp-an-automated-comparable-and-harmonized-analyses-of-micro-particles","dir":"","previous_headings":"","what":"An automated Comparable and Harmonized Analyses of Micro-Particles","title":"An automated Comparable and Harmonized Analyses of Micro-Particles","text":"Go pkgdown website getting started","code":""},{"path":"https://maki-science.github.io/easyCHAMP/index.html","id":"software-prior-of-using-this-package","dir":"","previous_headings":"","what":"Software prior of using this package","title":"An automated Comparable and Harmonized Analyses of Micro-Particles","text":"package works data produced third-party software focuses microplastic analyses (can also used various particles). Microplastics (microparticles) can found part environmental nutritional sample. Today, FPA-based FTIR imaging allows whole sample measured quickly. However, analyse measurement data, powerful tool needed reliably identify polymer particles contained sample. analysis must provide objective, complete robust results, presented detail transparently. Various software (like MicroplasticsFinder, MicroparticlesAI, siMPle) use machine learning algorithms identify 20 polymer types within minutes. combination FTIR imaging, offers fastest method examine entire sample microplastics. Thanks automation, require time-consuming manual post-processing, analysis results optimally comparable reproducible. Microplastics analysis becomes scalable new types questions presence origin microplastics can answered. Source: https://www.purency.ai/product1/microplastics-finder)","code":""},{"path":"https://maki-science.github.io/easyCHAMP/index.html","id":"purpose-of-this-package","dir":"","previous_headings":"","what":"Purpose of this package","title":"An automated Comparable and Harmonized Analyses of Micro-Particles","text":"Commonly microplastic research, sample splitted filtered several filters. scanned via µ-FTIR resulting data analysed various software (like MicroplasticsFinder, MicroparticlesAI, siMPle). software produce *.csv files sample contaning particles annotation, usually cured refined human. , files sample corrected blanks summarized, can laborious detious manual semi-automated work also prone human mistake. jump : package functions can used automate sample/blank averaging, blank processing, single file handling gathering relevant data sample one file. processing requires seconds instead hours (copying pasting) manual work. Furthermore, chance mistakes reduced generic computation. employing robust conservative algorithms ensured, results transparently comparably produced amount microplastic contamination overestimated. (desired) count occurrences fibres, fragments, spheres pixels, well different (customisable) size fractions polymer. file (.e., measurement) evaluated separately, well summarized files (.e., one sample). Also blank correction correction filter division can automated function. sample new excel file generated folder files placed . One file sample one additional file, containing data different processing steps (also raw data) allow full track processing. desired, function returns list object R environment produced data sets, can used processing (e.g., creating plots) R. default parameter settings based requirements animal ecology group (AG Prof. Laforsch) University Bayreuth. However, function highly customisable, can change parameters desire. Read pkgdown website detailed instruction can/change. desired, also presets can incorporated package common workflow lab collaboration can ensured.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"An automated Comparable and Harmonized Analyses of Micro-Particles","text":"two main functions applied: easyCHAMP() blank corrected summary liking; easyCHAMP.particles() particle-wise blank correction, retention single particles properties (e.g., physical simulations). briefly, everything set, sufficient call one functions provide path files can found. However, naming files follow certain structure, ensure proper processing samples blanks. way, way files processed highly customisable potentially scenarios covered alogrithm. Additionally, plenty options customization settings *.csv files. Check package vignettes go pkgdown website. Click Get started, view website articles study options. ’ve tried gather information (hopefully) simple userfriendly way. following topics can found pkgdown website: install files named polymer-shape-size wise summary particle-wise processing (mainly blank correction) Labpresets specifications function call according *.csv files Changing file specifications (e.g., decimal sign) Use different naming styles Change evaluated polymers (substances) Change sizeclasses interested particle shape? parts samples analysed? easyCHAMP.particles() : certain particle colour analysed separately (e.g., using spiked standard particles)! easyCHAMP.particles() : particles shape, don’t want set manually (ignore )! Get results R environment use (e.g., creating graphs) get column sums file get extra file total particle numbers sample Troubleshooting: list common issues mistakes","code":""},{"path":"https://maki-science.github.io/easyCHAMP/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An automated Comparable and Harmonized Analyses of Micro-Particles","text":"cite easyCHAMP publications use: Marvin Kiene, Eva Vizsolyi Cseperke, Benedikt Hufnagl, Martin Löder Christian Laforsch (2025). easyCHAMP: automated Comparable Harmonized Analyses Micro-Particles. R package version 1.3.8.9021. https://github.com/Maki-science/easyCHAMP BibTeX-entry LaTeX-user @Misc{, title = {easyCHAMP: automated Comparable Harmonized Analyses Micro-Particles}, author = {Marvin Kiene Eva {Cseperke Vizsolyi} Benedikt Hufnagl Martin Löder Christian Laforsch}, note = {R package version 1.3.8.9021}, year = {2025}, url = {https://github.com/Maki-science/easyCHAMP}, }","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.config.helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Manages configuration of easyCHAMP, including labpresets — easyCHAMP.config.helper","title":"Manages configuration of easyCHAMP, including labpresets — easyCHAMP.config.helper","text":"settings easyCHAMP can overwritten labpreset. labpreset selected, might overwrite overwrite current function settings. manage settings chosen (depending NAs labpreset), function handles configuration labpresets correctly returns config data frame. function thought ensure correct configuration simplify changes maintenance, well improving testing.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.config.helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manages configuration of easyCHAMP, including labpresets — easyCHAMP.config.helper","text":"","code":"easyCHAMP.config.helper(   labpreset,   blankKey,   sep,   dec,   colPol,   colL,   colReqPol,   ReqPolKey,   colShape,   colCol,   colLFib,   colArea,   colWidth,   fibre,   sphere,   fragment,   pixel,   startrow )"},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.config.helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manages configuration of easyCHAMP, including labpresets — easyCHAMP.config.helper","text":"labpreset preset parameters (except: path, polymers, dataReturn, eocsum). Can requested labs, implemented, set manually time. blankKey key word distinguish blanks measurements/samples. case sensitive prevent accidental matching. Defaults \"Blank\". sep Symbol csv files indicating new column. Defaults ';'. dec Symbol csv files indicating decimal sign. Defaults ','. colPol Column number polymer type stated. TOEKI lab column 6 (Class Name). polymer names (abbreviations) can set manually 'polymers' case default apply. also provided column name, ASCII encoding (e.g., special character . ä = d). colL Column number particle length. TOEKI lab column 17 (Length 5µ). also provided column name, ASCII encoding (e.g., special character . ä = d). colReqPol Column number particle check, whether particle polymer . TOEKI lab column 24 (Plastik? Plastik ja/nein). also provided column name, ASCII encoding (e.g., special character . ä = d). curing took place, parameter set 'none' cause function simply use particles file. Warning: might cause warnings errors occur, polymer unknown substance (e.g., polymer). ReqPolKey key word sentence 'colReqPol' indicates plastic particle. Default 'ja'. colShape Column number particle shape. TOEKI lab column 25 (Form). also provided column name, ASCII encoding (e.g., special character . ä = d). colCol Column number particle color TOEKI lab column 26 (Farbe). also provided column name, ASCII encoding (e.g., special character . ä = d). colLFib Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 27 (Länge). also provided column name, ASCII encoding (e.g., special character . ä = d). colArea Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 4 (Area µm²). also provided column name, ASCII encoding (e.g., special character . ä = d). colWidth Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 18 (Width µm). also provided column name, ASCII encoding (e.g., special character . ä = d). fibre fibres called colShape (Form). TOEKI lab 'Faser'. sphere spheres called colShape (Form). TOEKI lab 'Kugel'. fragment fragments called colShape (Form). TOEKI lab 'Fragment'. pixel pixels called colShape (Form). TOEKI lab 'Pixel'. startrow Number rows can omitted *.csv files. Usually preprocessing software provides bunch meta data, interest . Usually 40 rows can skipped (less - 0 case siMPle). automated now. However, automation can disabled value defined (e.g., troubleshooting).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":null,"dir":"Reference","previous_headings":"","what":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"Evaluate *.csv files, produced microparticle analysis software (like MicroplasticFinder, MicroparticleAI siMPle). count occurences fibres, fragments, spheres pixels, well size fractions (customisable) polymer. file (.e., measurement) evaluated separately, well summarized files (.e., one sample). details, check package website.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"","code":"easyCHAMP(   path,   polymers = c(\"PU\", \"EVAc\", \"PA\", \"PAN\", \"PBT\", \"PET\", \"PE\", \"PMMA\", \"PP\", \"POM\", \"PS\",     \"PVC\", \"PC\", \"ABS\", \"PPSU\", \"CA\", \"PEEK\", \"EVOH\", \"PSU\", \"SILICONE\", \"PLA\",     \"PLAPBAT\"),   sizeclasses = c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),   setDivFactor = FALSE,   dataReturn = FALSE,   eocsum = TRUE,   particleNumbers = FALSE,   formFillDefault = FALSE,   colourFillDefault = FALSE,   colourSep = FALSE,   labpreset = FALSE,   blankKey = \"Blank\",   noBlank = FALSE,   sep = \";\",   dec = \",\",   colPol = 6,   colL = 17,   colReqPol = 24,   ReqPolKey = \"ja\",   colShape = 25,   colCol = 26,   colLFib = 27,   colArea = 4,   colWidth = 18,   fibre = \"Faser\",   sphere = \"Kugel\",   fragment = \"Fragment\",   pixel = \"Pixel\",   test = FALSE,   startrow = \"auto\" )"},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"path path files can found. *.csv files folder evaluated. Also saves resulting files directory. polymers vector containing abbreviations polymers considered. Default vector contains 22 polymers. sizeclasses vector containing desired sizeclasses evaluated. Default c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500) function starts 0 uses set steps. always uses values provided higher number excluding former number (e.g., default values, function uses 0 <= 10, >10 <= 20, >20 <= 50, ..., >500). setDivFactor set 'filterwise', function request division factors filter processing. set 'samplewise', function request division factors sample (filters one sample). Sometimes filters divided many particles one measurement. part original sample analysed, corrected blank correction. might , blank different division factor sample, since might good use full blank particle numbers /filter breaks appart, factor might change single sample. Therefore sample (blank) need factor. Defaults FALSE. dataReturn set TRUE, data frame returned containing data measurement necessary information. eocsum TRUE (default) adds column sum end column summary panel. particleNumbers set TRUE like get extra file just plastic non-plastic particle numbers file loaded. formFillDefault desired can provide default form filled , form provided (NA). one values parameters 'fibre', 'sphere', 'fragment' 'pixel' (see ). colourFillDefault desired can provide default colour filled , colour provided data (NA). However, function colour meansing. colourSep whether separate colours analysis . usable easyCHAMP.particles()! labpreset preset parameters (except: path, polymers, dataReturn, eocsum). Can requested labs, implemented, set manually time. blankKey key word distinguish blanks measurements/samples. case sensitive prevent accidental matching. Defaults \"Blank\". noBlank Can set TRUE blank just want summarize data (defaults FALSE). sep Symbol csv files indicating new column. Defaults ';'. dec Symbol csv files indicating decimal sign. Defaults ','. colPol Column number polymer type stated. TOEKI lab column 6 (Class Name). polymer names (abbreviations) can set manually 'polymers' case default apply. also provided column name, ASCII encoding (e.g., special character . ä = d). colL Column number particle length. TOEKI lab column 17 (Length 5µ). also provided column name, ASCII encoding (e.g., special character . ä = d). colReqPol Column number particle check, whether particle polymer . TOEKI lab column 24 (Plastik? Plastik ja/nein). also provided column name, ASCII encoding (e.g., special character . ä = d). curing took place, parameter set 'none' cause function simply use particles file. Warning: might cause warnings errors occur, polymer unknown substance (e.g., polymer). ReqPolKey key word sentence 'colReqPol' indicates plastic particle. Default 'ja'. colShape Column number particle shape. TOEKI lab column 25 (Form). also provided column name, ASCII encoding (e.g., special character . ä = d). Can also set 'none' column shape exists files. cause function create one set 'fragment' shape. However, can ignored afterwards. colCol Column number particle color TOEKI lab column 26 (Farbe). also provided column name, ASCII encoding (e.g., special character . ä = d). colLFib Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 27 (Länge). also provided column name, ASCII encoding (e.g., special character . ä = d). colArea Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 4 (Area µm²). also provided column name, ASCII encoding (e.g., special character . ä = d). colWidth Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 18 (Width µm). also provided column name, ASCII encoding (e.g., special character . ä = d). fibre fibres called colShape (Form). TOEKI lab 'Faser'. sphere spheres called colShape (Form). TOEKI lab 'Kugel'. fragment fragments called colShape (Form). TOEKI lab 'Fragment'. pixel pixels called colShape (Form). TOEKI lab 'Pixel'. test Can set TRUE function run testing mode. startrow Number rows can omitted *.csv files. Usually preprocessing software provides bunch meta data, interest . Usually 40 rows can skipped (less - 0 case siMPle). automated now. However, automation can disabled value defined (e.g., troubleshooting).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"dataReturn = TRUE, function returns list object including processed data processing step summary values.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"https://www.purency.ai/microplastics-finder, https://maki-science.github.io/easyCHAMP/index.html, https://simple-plastics.eu/","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP","text":"","code":"# For this example the path doesn't matter.  # If you want to analyse your own data, set test = FALSE (or simply delete this parameter). mydata <- easyCHAMP(path=\"//HERE/COMES/YOUR/PATH/\", dataReturn = TRUE, test = TRUE) #> Done.  # Change evaluated size classes (evaluate <10, 10-100, 100-500 and >500 µm). mydata <- easyCHAMP(path=\"//HERE/COMES/YOUR/PATH/\",                        sizeclasses = c(10,100,500), dataReturn = TRUE, test = TRUE) #> Done.  # Include a division factor for the samples and blanks (in case filters have been divided). # Only works in interactive Session. mydata <- easyCHAMP(path=\"//HERE/COMES/YOUR/PATH/\",                       setDivFactor = \"samplewise\", dataReturn = TRUE, test = TRUE) #> Done.  # Skip the summary row at bottom of each column in the sample summary. mydata <- easyCHAMP(path=\"//HERE/COMES/YOUR/PATH/\",                        eocsum = FALSE, dataReturn = TRUE, test = TRUE) #> Done."},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.load.helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Manages data loading and pre-processing of the easyCHAMP package. In the end, also a quality control is performed that throws warnings if there are empty files or fields, including the name and column. — easyCHAMP.load.helper","title":"Manages data loading and pre-processing of the easyCHAMP package. In the end, also a quality control is performed that throws warnings if there are empty files or fields, including the name and column. — easyCHAMP.load.helper","text":"Shared main function easyCHAMP package. Loads data *.csv files provided folter.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.load.helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manages data loading and pre-processing of the easyCHAMP package. In the end, also a quality control is performed that throws warnings if there are empty files or fields, including the name and column. — easyCHAMP.load.helper","text":"","code":"easyCHAMP.load.helper(   path,   particleNumbers,   sep,   dec,   formFillDefault,   colourFillDefault,   colL,   colPol,   startrow,   colReqPol,   colourSep,   ReqPolKey,   colShape,   colCol,   colLFib,   colArea,   colWidth,   test,   fibre,   sphere,   fragment,   pixel )"},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.load.helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manages data loading and pre-processing of the easyCHAMP package. In the end, also a quality control is performed that throws warnings if there are empty files or fields, including the name and column. — easyCHAMP.load.helper","text":"path path set user main function. particleNumbers set TRUE like get extra file just plastic non-plastic particle numbers file loaded. sep Column separator within *.csv files. Defaults ';' main function. dec Decimal sign within *.csv files. Defaults ',' main function. formFillDefault desired can provide default form filled , form provided (NA). one values parameters 'fibre', 'sphere', 'fragment' 'pixel' (see ). colourFillDefault desired can provide default colour filled , colour provided data (NA). However, function colour meansing. colL Column number particle length. TOEKI lab column 17 (Length 5µ). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. colPol Column number polymer type stated. TOEKI lab column 6 (Class Name). polymer names (abbreviations) can set manually 'polymers' case default apply. also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. startrow Number rows can omitted *.csv files. Usually preprocessing software provides bunch meta data, interest . Usually 40 rows can skipped (less - 0 case siMPle). automated now. However, automation can disabled value defined (e.g., troubleshooting). colReqPol Column number particle check, whether particle polymer . TOEKI lab column 24 (Plastik? Plastik ja/nein). also provided column name, ASCII encoding (e.g., special character . ä = d). curing took place, parameter set 'none' cause function simply use particles file. Warning: might cause warnings errors occur, polymer unknown substance (e.g., polymer). colourSep whether colour separation desired analysis. usable evalPurency.particles()! ReqPolKey key word sentence 'colReqPol' indicates plastic particle. Default 'ja'. Set main function. colShape Column number particle shape. TOEKI lab column 25 (Form). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. Can also set 'none' column shape exists files. cause function create one set 'fragment' shape. However, can ignored afterwards. colCol Column number particle color TOEKI lab column 26 (Farbe). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. colLFib Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 27 (Länge). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. colArea Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 4 (Area µm²). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. colWidth Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 18 (Width µm). also provided column name, ASCII encoding (e.g., special character . ä = d). Set main function. test Can set TRUE function run testing mode. Set main function. fibre fibres called colShape (Form). TOEKI lab 'Faser'. sphere spheres called colShape (Form). TOEKI lab 'Kugel'. fragment fragments called colShape (Form). TOEKI lab 'Fragment'. pixel pixels called colShape (Form). TOEKI lab 'Pixel'.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.load.helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manages data loading and pre-processing of the easyCHAMP package. In the end, also a quality control is performed that throws warnings if there are empty files or fields, including the name and column. — easyCHAMP.load.helper","text":"Returns data frame containing list particles properties.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":null,"dir":"Reference","previous_headings":"","what":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"Instead summarized version *.csv files microparticle analysis software (like MicroplasticsFinder, MicroparticleAI, siMPle). Like easyCHAMP(), function provides list particles. Blank correction done -similar-particle comparison.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"","code":"easyCHAMP.particles(   path,   polymers = c(\"PU\", \"EVAc\", \"PA\", \"PAN\", \"PBT\", \"PET\", \"PE\", \"PMMA\", \"PP\", \"POM\", \"PS\",     \"PVC\", \"PC\", \"ABS\", \"PPSU\", \"CA\", \"PEEK\", \"EVOH\", \"PSU\", \"SILICONE\", \"PLA\",     \"PLAPBAT\"),   sizeclasses = c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),   divFactor = 1,   colourSep = FALSE,   dataReturn = FALSE,   particleNumbers = FALSE,   formFillDefault = FALSE,   colourFillDefault = FALSE,   labpreset = FALSE,   noBlank = FALSE,   test = FALSE,   blankKey = \"Blank\",   sep = \";\",   dec = \",\",   colPol = 6,   colL = 17,   colReqPol = 24,   ReqPolKey = \"ja\",   colShape = 25,   colCol = 26,   colLFib = 27,   colArea = 4,   colWidth = 18,   fibre = \"Faser\",   sphere = \"Kugel\",   fragment = \"Fragment\",   pixel = \"Pixel\",   startrow = \"auto\" )"},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"path path files can found. csv files folder evaluated. Also saves resulting files directory. polymers vector containing abbreviations polymers considered. Default vector contains 22 polymers. sizeclasses vector containing desired sizeclasses evaluated. Default c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500). function starts 0 uses set steps. always uses values provided higher number excluding former number (e.g., default values, function uses 0 <= 10, >10 <= 20, >20 <= 50, ..., >500). However, since function use just length, length width (area), compared easyCHAMP, size classes set area, considering provided size class square (e.g. 500 x 500 µm = 250000 µm^2). done, simplify setup. much easier imagine particle length one edge, surface. divFactor Set division factor, used divide results factor. samples/filters blanks must factor (otherwise apply manually running function). Defaults 1. colourSep Whether special color particles treated separately colours. Colours usually difficult distinguish FTIR pictures. e.g., black non-blacks distinguishable. cases interest separately handle black particles (e.g., black foliage used experiment). colour named Purency can set (e.g., \"black\" \"schwarz\"). Defaults FALSE, .e., separation. dataReturn set TRUE, data frame returned containing data measurement necessary information. particleNumbers set TRUE like get extra file just plastic non-plastic particle numbers file loaded. formFillDefault desired can provide default form filled , form provided data (NA). one values parameters 'fibre', 'sphere', 'fragment' 'pixel' (see ). colourFillDefault desired can provide default colour filled , colour provided data (NA). labpreset preset parameters (except: path, polymers, dataReturn, eocsum). Can requested labs, implemented, set manually time. noBlank Can set TRUE blank just want summarize data (defaults FALSE). test Can set TRUE function run testing mode. blankKey key word distinguish blanks measurements/samples. case sensitive prevent accidental matching. Defaults \"Blank\". sep Symbol *.csv files indicating new column. Defaults ';'. dec Symbol *.csv files indicating decimal sign. Defaults ','. colPol Column number polymer type stated. TOEKI lab column 6 (Class Name). polymer names (abbreviations) can set manually 'polymers' case default apply. also provided column name, ASCII encoding (e.g., special character . ä = d). colL Column number particle length. TOEKI lab column 17 (Length 5µ). also provided column name, ASCII encoding (e.g., special character . ä = d). colReqPol Column number particle check, whether particle polymer . TOEKI lab column 24 (Plastik? Plastik ja/nein). also provided column name, ASCII encoding (e.g., special character . ä = d). curing took place, parameter set 'none' cause function simply use particles file. Warning: might cause warnings errors occur, polymer unknown substance (e.g., polymer). ReqPolKey key word sentence 'colReqPol' indicates plastic particle. Default 'ja'. colShape Column number particle shape. TOEKI lab column 25 (Form). also provided column name, ASCII encoding (e.g., special character . ä = d). Can also set 'none' column shape exists files. cause function create one set 'fragment' shape. However, can ignored afterwards. colCol Column number particle color TOEKI lab column 26 (Farbe). also provided column name, ASCII encoding (e.g., special character . ä = d). colLFib Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 27 (Länge). also provided column name, ASCII encoding (e.g., special character . ä = d). colArea Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 4 (Area µm²). also provided column name, ASCII encoding (e.g., special character . ä = d). colWidth Column number particle length case fibre corrected length (curvy shape) TOEKI lab column 18 (Width µm). also provided column name, ASCII encoding (e.g., special character . ä = d). fibre fibres called colShape (Form). TOEKI lab 'Faser'. sphere spheres called colShape (Form). TOEKI lab 'Kugel'. fragment fragments called colShape (Form). TOEKI lab 'Fragment'. pixel pixels called colShape (Form). TOEKI lab 'Pixel'. startrow Number rows can omitted *.csv files. Usually preprocessing software provides bunch meta data, interest . Usually 40 rows can skipped (less - 0 case siMPle). automated now. However, automation can disabled value defined (e.g., troubleshooting).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"dataReturn = TRUE, function returns list object including raw processed data processing step summary values.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"https://www.purency.ai/microplastics-finder, https://maki-science.github.io/easyCHAMP/index.html, https://simple-plastics.eu/","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/easyCHAMP.particles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An automated Comparable and Harmonized Analyses of Micro-Particles — easyCHAMP.particles","text":"","code":"# For this example the path doesn't matter.  # If you want to analyse your own data, set the path accordingly and  # test = FALSE (or simply delete this parameter). mydata <- easyCHAMP.particles(path=\"//HERE/COMES/YOUR/PATH/\", dataReturn = TRUE, test = TRUE) # Get the data frames of interest from the list mydata.processedParticles <- mydata$processedSamples"},{"path":"https://maki-science.github.io/easyCHAMP/reference/purencySampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"sample data set as a result of Purency's Microplastic Particle Finder — purencySampleData","title":"sample data set as a result of Purency's Microplastic Particle Finder — purencySampleData","text":"Reflects data read environment evalPurency. used testing purpose, well examples testing users.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/purencySampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample data set as a result of Purency's Microplastic Particle Finder — purencySampleData","text":"","code":"purencySampleData"},{"path":"https://maki-science.github.io/easyCHAMP/reference/purencySampleData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"sample data set as a result of Purency's Microplastic Particle Finder — purencySampleData","text":"data frame 2313 rows 9 variables: sample name sample. sample comprises one several single measurements, summed processing evalPurency. measurement name single measurement. className Contains name polymer, described row. length length particle measured Purency. form form(shape) particle (sphere, fragment, pixel, fibre). color Color particle (used, yet). lengthFibre particle fibre, lenght measured manually. case, length stated . area area particle measured Purency. width width particle measured Purency.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/reference/purencySampleData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sample data set as a result of Purency's Microplastic Particle Finder — purencySampleData","text":"https://github.com/Maki-science/evalPurency","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1389021","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.8.9021","title":"easyCHAMP 1.3.8.9021","text":"company Purency exist anymore. Furthermore, meanwhile, package can also handle data various particle analyses software. Thus, decided rename package easyCHAMP (Comparable Harmonized Analyses Micro-Particles). renaming bundled restrukturing expanding readme pkgdown website users convenience. course, also functions renamed accordingly easyCHAMP() easyCHAMP.particles().","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1389021-1","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.8.9021","title":"easyCHAMP 1.3.8.9021","text":"since researches might interested shape particles, included possibility ignore feature. parameter ‘colShape’ can now set ‘none’. cause functions create extra column ‘shape’ shape set according parameter ‘fragment’. quick--dirty (properly working) implementation feature, since actual ignorance shape easy originially thought central feature package. Therefore, strongly embedded current code structure easily jumped .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1379021","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.7.9021","title":"easyCHAMP 1.3.7.9021","text":"startrow (read files) now automatically extracted file separately. Therefore, errors regarding reading files gone now, even one file different number rows real data starts. Even though increases processing time seconds (data read), user worry point anymore. However, automation can disabled value defined (e.g., troubleshooting).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1379020","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.7.9020","title":"easyCHAMP 1.3.7.9020","text":"Adjusted handling colours skip colour check colours separated (prevents warning popping time cases colour separation - time)","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1379019","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.7.9019","title":"easyCHAMP 1.3.7.9019","text":"Changes function feedback: Since evalPurency.particles() also takes use colour, included note, colour set. However, since done helper function, shared evalPurency(), note also thrown evalPurency() file colour defined. changed code now, note just thrown consideration. Minor addon (requested Martin): processing_data.csv now contains additional sheet, reporting provided division factors. Bugfix: found bug rounding behaviour algorithm. Therefore, blank correction, final result rounded, digits cut . fixed flaw always rounded upper integer number (provide conservative values). Testsuite: Since changed output additional sheet processing_data.csv, updated testsuite accordingly.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1379018","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.7.9018","title":"easyCHAMP 1.3.7.9018","text":"minor addon (requested Sarmite): Now, can set default values form colour set data. done excel, course, now can just --flow files .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1369018","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.6.9018","title":"easyCHAMP 1.3.6.9018","text":"minor addon: now test suite available evalPurency.particles() improve maintenance quality control.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1359018","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.5.9018","title":"easyCHAMP 1.3.5.9018","text":"Bugfix: fixed issue evalPurency.particles() one sample-blank pair . Previously jumped every second sample.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1359017","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.3.5.9017","title":"easyCHAMP 1.3.5.9017","text":"new feature: new function evalPurency.particles() now ready use. Testing description still properly done. Thus consider Beta far. function, possible particle wise processing, keep particle traits strackable, still allowing conservative blank correction. particle lists valuable, e.g., simulations particle physical properties environmental distributions.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259017","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9017","title":"easyCHAMP 1.2.5.9017","text":"fixed bug: expanded issue particles blank measures. Now function throws warning internally sets noBlank = TRUE. Thus errors occur anymore. new feature: following wish (Anja), can now set particleNumbers = TRUE, wish get extra *.xls-file providing total particle numbers plastic-particle numbers file.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259016","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9016","title":"easyCHAMP 1.2.5.9016","text":"fixed issue, caused problems processing files without measured plastic particles. Additionally, warning thrown case, intended (e.g., mistakenly empty column).","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259015","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9015","title":"easyCHAMP 1.2.5.9015","text":"apparently happens, Purency produces file, special characters differently encoded (didn’t figure yet). causes evalPurency issues reading files (since usually just one several files somewhat different). function applied ‘ASCII’ encoding. update switched ‘latin1’. restructuring code applied preparation additional functionality coming soon.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259014","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9014","title":"easyCHAMP 1.2.5.9014","text":"following request (Eva), function now retains information area width particles provides processing data raw data sheet.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259013","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9013","title":"easyCHAMP 1.2.5.9013","text":"fixed bug caused error message rare circumstances. However, calculation affected .","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259012","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9012","title":"easyCHAMP 1.2.5.9012","text":"fixed bug led division blank particles number blank filters (even one blank), summed together. extended code (make work even better) one can use several filters one blank sum several blanks one samples averaged. Find updated readme.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259011","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9011","title":"easyCHAMP 1.2.5.9011","text":"extended functionality division factors allow also filterwise setup factors. Now can choose parameter setDivFactor TRUE, equal samplewise, now requests factors samplewise (.e., filters one sample factor), filterwise, requests factors filterwise.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259010","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9010","title":"easyCHAMP 1.2.5.9010","text":"function now checks whether provided forms found provided data. discrepancies field, respective line excluded Warning message appear. unknown values caused wierd output tables.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1259009","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.5.9009","title":"easyCHAMP 1.2.5.9009","text":"added minor feature: can now set noBlank = TRUE skip blank processing. Thus, don’t require blank folder. added parameter startrow. changed work experimental Purency version changed way excelfiles saved.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1249009","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.4.9009","title":"easyCHAMP 1.2.4.9009","text":"bug fixed now caused error missing values occured data (indicated warning message ). Now rows containing missing data, excluded processing.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1249008","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.4.9008","title":"easyCHAMP 1.2.4.9008","text":"added sep dec additional parameters can customized users’ csv-file specifications division factors now requested stepwise sample/blank instead samples bug fixed now, sometimes produced minor discrepancy real sum shown total particle number. Additionally total sample summary, sample files also contain sheets particle shape shape-wise summary numbers.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1249005","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.2.4.9005","title":"easyCHAMP 1.2.4.9005","text":"added new major feature: now function can also perform blank correction data provided (read readme description find ) added new minor feature: can now choose additional parameter whether incorporate division factor (just used parts sample) samples blanks separately. function request factors processing avoid confusion mistakes function call Silicone particles evaluated far, since implemented ‘SI’. However, Purency configuration lab ‘SILICONE’. corrected evaluated now.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1139004","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.3.9004","title":"easyCHAMP 1.1.3.9004","text":"changed way column summary calculated support following feature added new parameter. Now eocsum can set TRUE (detault) FALSE get line skip calculation. added new parameter. Now labpreset can set accordingly different labs, parameters changed/set manually labs. Labpresets can now requested implemented fast. new parameter added. Now user can set desired size classes evaluated. Now, virtually every parameters programmed dynamically can customised.","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1119003","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.1.9003","title":"easyCHAMP 1.1.1.9003","text":"added customizable parameters adopt function labs naming conventions different preset","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1119002","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.1.9002","title":"easyCHAMP 1.1.1.9002","text":"updated readme content measurement sample summary now “sample sum” instead “sum”","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1119001","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.1.9001","title":"easyCHAMP 1.1.1.9001","text":"evalPurency() now adds row sample summary column sums (requested Eva)","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1109001","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.0.9001","title":"easyCHAMP 1.1.0.9001","text":"now reports processing done","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1109000","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.1.0.9000","title":"easyCHAMP 1.1.0.9000","text":"reworked package better maintainability issue handling","code":""},{"path":"https://maki-science.github.io/easyCHAMP/news/index.html","id":"easychamp-1009000","dir":"Changelog","previous_headings":"","what":"easyCHAMP 1.0.0.9000","title":"easyCHAMP 1.0.0.9000","text":"full functional version function available","code":""}]
