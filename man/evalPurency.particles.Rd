% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evalPurency-particles.R
\name{evalPurency.particles}
\alias{evalPurency.particles}
\title{Automated evaluation of Purency data.}
\usage{
evalPurency.particles(
  path,
  polymers = c("PU", "EVAc", "PA", "PAN", "PBT", "PET", "PE", "PMMA", "PP", "POM", "PS",
    "PVC", "PC", "ABS", "PPSU", "CA", "PEEK", "EVOH", "PSU", "SILICONE", "PLA",
    "PLAPBAT"),
  sizeclasses = c(10, 20, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),
  divFactor = 1,
  colourSep = FALSE,
  dataReturn = FALSE,
  particleNumbers = FALSE,
  labpreset = FALSE,
  noBlank = FALSE,
  test = FALSE,
  blankKey = "Blank",
  sep = ";",
  dec = ",",
  colPol = 6,
  colL = 17,
  colReqPol = 24,
  ReqPolKey = "ja",
  colShape = 25,
  colCol = 26,
  colLFib = 27,
  colArea = 4,
  colWidth = 18,
  fibre = "Faser",
  sphere = "Kugel",
  fragment = "Fragment",
  pixel = "Pixel",
  startrow = 40
)
}
\arguments{
\item{path}{The path where the files can be found. All csv files in this folder will be evaluated. Also saves the
resulting files in this directory.}

\item{polymers}{A vector containing the abbreviations of polymers to be considered. Default vector contains 22
polymers.}

\item{sizeclasses}{A vector containing desired sizeclasses to be evaluated. Default is c(10, 20, 50, 100, 150,
200, 250, 300, 350, 400, 450, 500). The function starts at 0 and then uses the set steps.
It always uses values up to the provided higher number but excluding the former number (e.g., for
the default values, the function uses 0 to <= 10, >10 to <= 20, >20 to <= 50, ..., all >500).
However, since this function does not use just the length, but the length and width (or area), compared to evalPurency,
The size classes are set in area, considering the provided size class as a square (e.g. 500 x 500 µm = 250000 µm^2).
This is done, to simplify the setup. It is much easier to imagine a particle with the length of one edge, than a surface.}

\item{divFactor}{Set a division factor, that is used to divide the results by this factor. All samples/filters
and blanks must have the same factor (otherwise apply manually after running the function). Defaults to 1.}

\item{colourSep}{Whether a special color of particles should be treated separately from other colours. Colours are
usually difficult to distinguish in the FTIR pictures. But e.g., black and non-blacks are distinguishable.
In some cases it is of interest to separately handle black particles (e.g., black foliage used in experiment).
How the colour is named in Purency can be set here (e.g., "black" or "schwarz"). Defaults to FALSE, i.e., no separation.}

\item{dataReturn}{If set TRUE, a data frame will be returned containing the data of all measurement with
the necessary information.}

\item{particleNumbers}{set TRUE if you would like to get an extra file with just plastic and non-plastic
particle numbers for each file loaded.}

\item{labpreset}{A preset for most of the parameters (except: path, polymers, dataReturn, eocsum).
Can be requested by other labs, to be implemented, that they don't have to be set manually all the time.}

\item{noBlank}{Can be set TRUE if you don't have a blank at all and just want to summarize your data (defaults to FALSE).}

\item{test}{Can be set TRUE when the function should be run in testing mode.}

\item{blankKey}{The key word to distinguish blanks from other measurements/samples. It is case sensitive to prevent
accidental matching. Defaults to "Blank".}

\item{sep}{Symbol in your *.csv files indicating new a column. Defaults to ';'.}

\item{dec}{Symbol in your *.csv files indicating decimal sign. Defaults to ','.}

\item{colPol}{Column number where the polymer type is stated. In the TOEKI lab this is column 6 (Class Name).
The polymer names (or abbreviations) can be set manually in 'polymers' in case the default does not apply.
Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colL}{Column number for the particle length. In the TOEKI lab this is column 17 (Length 5µ).
Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colReqPol}{Column number for the particle check, whether the particle is a polymer or not.
In the TOEKI lab this is column 24 (Plastik? or Plastik ja/nein). Could also be provided as column name, but only
in ASCII encoding (e.g., special character as . and ä = d).}

\item{ReqPolKey}{key word or sentence of 'colReqPol' that indicates that it is a plastic particle. Default is 'ja'.}

\item{colShape}{Column number for the particle shape. In the TOEKI lab this is column 25 (Form).
Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colCol}{Column number for the particle color In the TOEKI lab this is column 26 (Farbe).
Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colLFib}{Column number for the particle length in case of a fibre with corrected length (because of curvy shape)
In the TOEKI lab this is column 27 (Länge). Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colArea}{Column number for the particle length in case of a fibre with corrected length (because of curvy shape)
In the TOEKI lab this is column 4 (Area µm²). Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{colWidth}{Column number for the particle length in case of a fibre with corrected length (because of curvy shape)
In the TOEKI lab this is column 18 (Width µm). Could also be provided as column name, but only in ASCII encoding (e.g., special character as . and ä = d).}

\item{fibre}{How fibres are called in colShape (Form). In the TOEKI lab it is 'Faser'.}

\item{sphere}{How spheres are called in colShape (Form). In the TOEKI lab it is 'Kugel'.}

\item{fragment}{How fragments are called in colShape (Form). In the TOEKI lab it is 'Fragment'.}

\item{pixel}{How pixels are called in colShape (Form). In the TOEKI lab it is 'Pixel'.}

\item{startrow}{Only required rarely. If you use a Purency version that saves the csv files slightly
differently, you might check at which line the data starts (including header). This number of line should
be set here (default 40).}
}
\value{
If dataReturn = TRUE, the function returns a list object including all
raw and processed data of each processing step and the summary values.
}
\description{
Instead of a summarized version of *.csv files from Purency like from evalPurency(), this function
provides a list of all particles. Blank correction is done with a most-similar-particle comparison.
}
\examples{
# For this example the path doesn't matter. 
# If you want to analyse your own data, set the path accordingly and 
# test = FALSE (or simply delete this parameter).
mydata <- evalPurency.particles(path="//HERE/COMES/YOUR/PATH/", dataReturn = TRUE, test = TRUE)
# Get the data frames of interest from the list
mydata.processedParticles <- mydata$processedSamples


}
\references{
https://www.purency.ai/microplastics-finder, https://maki-science.github.io/evalPurency/index.html
}
